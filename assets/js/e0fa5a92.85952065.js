"use strict";(self.webpackChunkrob_18_n_documentation=self.webpackChunkrob_18_n_documentation||[]).push([[864],{3844:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(4848),o=t(8453);const s={sidebar_position:2},i="PHP (Laravel)",a={id:"guide/usage/export/php_laravel",title:"PHP (Laravel)",description:"You can add a simple command to get your language files.",source:"@site/docs/guide/usage/export/php_laravel.md",sourceDirName:"guide/usage/export",slug:"/guide/usage/export/php_laravel",permalink:"/app/docs/guide/usage/export/php_laravel",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guideSidebar",previous:{title:"Javascript",permalink:"/app/docs/guide/usage/export/javascript"}},l={},c=[{value:"Create the command",id:"create-the-command",level:2},{value:"File contents",id:"file-contents",level:2},{value:"Adjust API Call Parameters",id:"adjust-api-call-parameters",level:3},{value:"Run the script",id:"run-the-script",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"php-laravel",children:"PHP (Laravel)"})}),"\n",(0,r.jsx)(n.p,{children:"You can add a simple command to get your language files."}),"\n",(0,r.jsx)(n.h2,{id:"create-the-command",children:"Create the command"}),"\n",(0,r.jsxs)(n.p,{children:["Go to your bash and submit this call ",(0,r.jsx)(n.code,{children:"php artisan make:command FetchAndProcessLangFiles"})," to create the file."]}),"\n",(0,r.jsx)(n.h2,{id:"file-contents",children:"File contents"}),"\n",(0,r.jsxs)(n.p,{children:["Copy the following code into the ",(0,r.jsx)(n.code,{children:"App/Console/Commands/FetchAndProcessLangFiles.php"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n\nnamespace App\\Console\\Commands;\n\nuse Illuminate\\Console\\Command;\nuse Illuminate\\Support\\Facades\\Http;\nuse ZipArchive;\nuse File;\n\nclass FetchAndProcessLangFiles extends Command\n{\n    protected $signature = 'lang:fetch';\n    protected $description = 'Fetch language files, extract and move them to the resources/lang directory';\n\n    public function __construct()\n    {\n        parent::__construct();\n    }\n\n    public function handle()\n    {\n        $this->handleLangFolder();\n\n        $this->getData();\n    }\n\n    protected function handleLangFolder()\n    {\n        if (!File::exists(base_path('resources/lang'))) {\n            File::makeDirectory(base_path('resources/lang'), 0755, true);\n            $this->info('Created directory: resources/lang');\n        }\n    }\n\n    protected function getData()\n    {\n        try {\n            $response = Http::post('http://localhost/language-key/export', [\n                'project_id' => 27,\n                'languages' => json_encode(['de_DE', 'en_US']),\n                'format' => 'json',\n            ]);\n\n            if ($response->successful()) {\n                $zipUrl = $response->json();\n                $this->downloadAndExtractZip($zipUrl, base_path('resources/lang'));\n            } else {\n                $this->error('Failed to fetch data from server');\n            }\n        } catch (\\Exception $e) {\n            $this->error('Error fetching data: ' . $e->getMessage());\n        }\n    }\n\n    protected function downloadAndExtractZip($url, $destFolder)\n    {\n        try {\n            $zipFile = $destFolder . '/temp.zip';\n            $response = Http::get($url);\n\n            if ($response->successful()) {\n                File::put($zipFile, $response->body());\n                $this->extractZip($zipFile, $destFolder);\n                File::delete($zipFile);\n            } else {\n                $this->error('Failed to download ZIP file');\n            }\n        } catch (\\Exception $e) {\n            $this->error('Error downloading or extracting ZIP: ' . $e->getMessage());\n        }\n    }\n\n    protected function extractZip($zipFile, $destFolder)\n    {\n        $zip = new ZipArchive;\n\n        if ($zip->open($zipFile) === true) {\n            $tempFolder = $destFolder . '/temp_unzip';\n            File::makeDirectory($tempFolder, 0755, true);\n\n            $zip->extractTo($tempFolder);\n            $zip->close();\n\n            $this->moveFilesFromSubfolder($tempFolder, $destFolder);\n            File::deleteDirectory($tempFolder);\n        } else {\n            $this->error('Failed to open ZIP file');\n        }\n    }\n\n    protected function moveFilesFromSubfolder($srcFolder, $destFolder)\n    {\n        $folders = File::directories($srcFolder);\n        if (count($folders) > 0) {\n            $subfolderPath = $folders[0];\n            $files = File::files($subfolderPath);\n\n            foreach ($files as $file) {\n                $fileName = $file->getFilename();\n                File::move($file->getRealPath(), $destFolder . '/' . $fileName);\n                $this->info('Moved file: ' . $fileName . ' to ' . $destFolder);\n            }\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"adjust-api-call-parameters",children:"Adjust API Call Parameters"}),"\n",(0,r.jsxs)(n.p,{children:["Before running the script, make sure to adjust the parameters in the API call according to your project needs. Specifically, you will need to modify the ",(0,r.jsx)(n.code,{children:"format"}),", ",(0,r.jsx)(n.code,{children:"project_id"})," and the list of ",(0,r.jsx)(n.code,{children:"languages"})," in the getData function:"]}),"\n",(0,r.jsx)(n.h2,{id:"run-the-script",children:"Run the script"}),"\n",(0,r.jsxs)(n.p,{children:["You can now run the script with the following command:\n",(0,r.jsx)(n.code,{children:"php artisan lang:fetch"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);